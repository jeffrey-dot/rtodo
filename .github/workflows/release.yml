name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - platform: 'linux'
            os: 'ubuntu-latest'
            args: ''
          - platform: 'win'
            os: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
          - platform: 'mac'
            os: 'macos-latest'
            args: '--target x86_64-apple-darwin'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install frontend dependencies
      run: pnpm install --frozen-lockfile

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Build Tauri app
      run: pnpm tauri build ${{ matrix.args }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: src-tauri/target/${{ matrix.platform == 'win' && 'x86_64-pc-windows-msvc/' || matrix.platform == 'mac' && 'x86_64-apple-darwin/' || '' }}release/bundle/${{ matrix.platform == 'win' && 'msi/' || matrix.platform == 'mac' && 'dmg/' || 'deb/' }}rtodo.${{ matrix.platform == 'win' && 'msi' || matrix.platform == 'mac' && 'dmg' || 'deb' }}
        asset_name: rtodo-${{ matrix.platform }}.${{ matrix.platform == 'win' && 'msi' || matrix.platform == 'mac' && 'dmg' || 'deb' }}
        asset_content_type: application/octet-stream