name: Build Release Artifacts

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: 'linux'
            os: 'ubuntu-latest'
            args: ''
            artifact_name: 'rtodo-linux.deb'
            asset_path: 'src-tauri/target/release/bundle/deb/'
            file_pattern: '*.deb'
          - platform: 'win'
            os: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            artifact_name: 'rtodo-windows.msi'
            asset_path: 'src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/'
            file_pattern: '*.msi'
          - platform: 'mac'
            os: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            artifact_name: 'rtodo-macos.dmg'
            asset_path: 'src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/'
            file_pattern: '*.dmg'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install frontend dependencies
      run: pnpm install --frozen-lockfile || pnpm install

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Build Tauri app
      run: pnpm tauri build ${{ matrix.args }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rtodo-${{ matrix.platform }}
        path: ${{ matrix.asset_path }}${{ matrix.file_pattern }}
        retention-days: 30